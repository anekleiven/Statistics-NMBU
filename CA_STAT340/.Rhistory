cols = everything(),  # All columns
names_to = "instructional_preference",
values_to = "interest") |>
as.factor(instruction_prefs_long$interest)
# transform the data to long format
instruction_prefs_long <-
instruction_prefs %>%
pivot_longer(
cols = everything(),  # All columns
names_to = "instructional_preference",
values_to = "interest") |>
as.factor(interest)
as.factor(instruction_prefs_long$interest)
# plot using ggplot
ggplot() +
geom_bar(data = instruction_prefs_long,
aes(x = instructional_preference,
y = interest, fill = interest),
position = 'dodge',
stat = "identity") +
labs(title = "Distribution of Instructional Preferences",
y = 'Interest',
x = 'Instructional preference')
# plot using ggplot
ggplot() +
geom_bar(data = instruction_prefs_long,
aes(x = instructional_preference,
y = "Count", fill = interest),
position = 'dodge',
stat = "identity") +
labs(title = "Distribution of Instructional Preferences",
y = 'Interest',
x = 'Instructional preference')
# plot using ggplot
ggplot(instruction_prefs_long,
aes(x = instructional_preference, fill = factor(interest))) +
geom_bar(stat = "count", position = "fill") +
labs(x = "Instructional Preference",
y = "Proportion",
fill = "Interest Level") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# transform the data to long format
instruction_prefs_long <-
instruction_prefs %>%
pivot_longer(
cols = everything(),  # All columns
names_to = "instructional_preference",
values_to = "interest")
# plot using ggplot
ggplot(instruction_prefs_long,
aes(x = instructional_preference, fill = factor(interest))) +
geom_bar(stat = "count", position = "fill") +
labs(x = "Instructional Preference",
y = "Proportion",
fill = "Interest Level") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# transform the data to long format
instruction_prefs_long <-
instruction_prefs %>%
pivot_longer(
cols = everything(),  # All columns
names_to = "instructional_preference",
values_to = "interest")
# plot using ggplot
ggplot(instruction_prefs_long,
aes(x = instructional_preference, fill = factor(interest))) +
geom_col(stat = "count", position = "fill") +
labs(x = "Instructional Preference",
y = "Proportion",
fill = "Interest Level") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# transform the data to long format
instruction_prefs_long <-
instruction_prefs %>%
pivot_longer(
cols = everything(),  # All columns
names_to = "instructional_preference",
values_to = "interest")
# plot using ggplot
ggplot(instruction_prefs_long,
aes(x = instructional_preference, fill = factor(interest))) +
geom_bar(stat = "count", position = "fill") +
labs(x = "Instructional Preference",
y = "Proportion",
fill = "Interest Level") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# transform the data to long format
instruction_prefs_long <-
instruction_prefs |>
pivot_longer(
cols = everything(),  # All columns
names_to = "instructional_preference",
values_to = "interest") |>
group_by(instructional_preference)
# transform the data to long format
instruction_prefs_long <-
instruction_prefs |>
pivot_longer(
cols = everything(),  # All columns
names_to = "instructional_preference",
values_to = "interest") |>
group_by(instructional_preference, interest)
# plot using ggplot
ggplot(instruction_prefs_long,
aes(x = instructional_preference, fill = factor(interest))) +
geom_bar(stat = "count", position = "fill") +
labs(x = "Instructional Preference",
y = "Proportion",
fill = "Interest Level") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# transform the data to long format
instruction_prefs_long <-
instruction_prefs |>
pivot_longer(
cols = everything(),  # All columns
names_to = "instructional_preference",
values_to = "interest") |>
group_by(instructional_preference, interest) |>
summarise(count = n())
# plot using ggplot
ggplot(instruction_prefs_long,
aes(x = instructional_preference, y = count, fill = factor(interest))) +
geom_bar(position = "fill") +
labs(x = "Instructional Preference",
y = "Proportion",
fill = "Interest Level") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
geom_bar(stat = "identity", aes(fill = interest))
# plot using ggplot
ggplot(instruction_prefs_long,
aes(x = instructional_preference, y = count) +
geom_bar(stat = "identity", aes(fill = interest)))
# plot using ggplot
ggplot() +
geom_col(data = instruction_prefs_long,
aes(x = instructional_preference, y = count, fill = interest))
ggplot() +
geom_col(data = instruction_prefs_long,
aes(x = instructional_preference, y = count, fill = interest)) +
labs(title = "Distribution of Instructional Preferences",
y = 'Count',
x = 'Instructional preference')
# plot using ggplot
ggplot(math_high, aes(x = work_type, y = Math)) +
geom_boxplot(aes(fill = work_type)) +
facet_wrap(~ work_type, scales = "free_x") +
labs(title = "Interest in mathematics by Work Type Interests",
y = 'Interest in mathematics',
x = 'Work type') +
scale_fill_manual(values = rep("#F8BBD0", 15))  +
theme_minimal() +
theme(legend.position = 'none',
title = element_text(size = 11))
# plot using ggplot
ggplot() +
geom_col(data = instruction_prefs_long,
aes(x = instructional_preference, y = count, fill = interest)) +
labs(title = "Distribution of Instructional Preferences",
y = 'Count',
x = 'Instructional preference') +
theme(legend.position = 'none',
title = element_text(size = 11))
# plot using ggplot
ggplot() +
geom_col(data = instruction_prefs_long,
aes(x = instructional_preference, y = count, fill = interest)) +
labs(title = "Distribution of Instructional Preferences",
y = 'Count',
x = 'Instructional preference') +
# plot using ggplot
ggplot() +
geom_col(data = instruction_prefs_long,
aes(x = instructional_preference, y = count, fill = interest)) +
labs(title = "Distribution of Instructional Preferences",
y = 'Count',
x = 'Instructional preference')
# plot using ggplot
ggplot() +
geom_col(data = instruction_prefs_long,
aes(x = instructional_preference, y = count, fill = interest)) +
labs(title = "Distribution of Instructional Preferences",
y = 'Count',
x = 'Instructional preference'))
ggplot() +
geom_col(data = instruction_prefs_long,
aes(x = instructional_preference, y = count, fill = interest)) +
labs(title = "Distribution of Instructional Preferences",
y = 'Count',
x = 'Instructional preference') +
scale_fill_manual(values = c("#F8BBD0", "#F48FB1", "#F06292"))
scale_fill_manual(values = c("#F8BBD0", "#F48FB1", "#F06292")
# plot using ggplot
ggplot() +
# plot using ggplot
ggplot() +
geom_col(data = instruction_prefs_long,
aes(x = instructional_preference, y = count, fill = interest)) +
labs(title = "Distribution of Instructional Preferences",
y = 'Count',
x = 'Instructional preference')
# plot using ggplot
ggplot() +
geom_col(data = instruction_prefs_long,
aes(x = instructional_preference, y = count, fill = interest)) +
labs(title = "Distribution of Instructional Preferences",
y = 'Count',
x = 'Instructional preference') +
theme_minimal()
theme(title = element_text(size = 11, hjust = 0.5)
# plot using ggplot
ggplot() +
# plot using ggplot
ggplot() +
geom_col(data = instruction_prefs_long,
aes(x = instructional_preference, y = count, fill = interest)) +
labs(title = "Distribution of Instructional Preferences",
y = 'Count',
x = 'Instructional preference') +
theme_minimal() +
theme(title = element_text(size = 11, hjust = 0.5))
# transform the data to long format
instruction_prefs_long <-
instruction_prefs |>
pivot_longer(
cols = everything(),  # All columns
names_to = "instructional_preference",
values_to = "interest") |>
group_by(instructional_preference, liking) |>
summarise(count = n())
# transform the data to long format
instruction_prefs_long <-
instruction_prefs |>
pivot_longer(
cols = everything(),  # All columns
names_to = "instructional_preference",
values_to = "liking") |>
group_by(instructional_preference, liking) |>
summarise(count = n())
# plot using ggplot
ggplot() +
geom_col(data = instruction_prefs_long,
aes(x = instructional_preference, y = count, fill = liking)) +
labs(title = "Distribution of Instructional Preferences",
y = 'Count',
x = 'Instructional preference') +
theme_minimal() +
theme(title = element_text(size = 11, hjust = 0.5))
# plot using ggplot
ggplot() +
geom_col(data = instruction_prefs_long,
aes(x = instructional_preference, y = count, fill = liking)) +
labs(title = "Distribution of Instructional Preferences",
y = 'Count',
x = 'Instructional preference') +
theme_minimal() +
theme(title = element_text(size = 11, hjust = 0.5)) +
scale_fill_manual(values = c("#F8BBD0", "#F48FB1", "#F06292"))
# plot using ggplot
ggplot() +
geom_col(data = instruction_prefs_long,
aes(x = instructional_preference, y = count, fill = liking)) +
labs(title = "Distribution of Instructional Preferences",
y = 'Count',
x = 'Instructional preference') +
theme_minimal() +
theme(title = element_text(size = 11, hjust = 0.5)) +
scale_color_brewer(palette = "Set1")
ggplot() +
geom_col(data = instruction_prefs_long,
aes(x = instructional_preference, y = count, fill = liking)) +
labs(title = "Distribution of Instructional Preferences",
y = 'Count',
x = 'Instructional preference') +
theme_minimal() +
theme(title = element_text(size = 11, hjust = 0.5)) +
scale_color_brewer(palette = "Set2")
# plot using ggplot
ggplot() +
geom_col(data = instruction_prefs_long,
aes(x = instructional_preference, y = count, fill = liking)) +
labs(title = "Distribution of Instructional Preferences",
y = 'Count',
x = 'Instructional preference') +
theme_minimal() +
theme(title = element_text(size = 11, hjust = 0.5)) +
scale_fill_manual(values = c("0" = "#FFB6C1",
"1" = "#FF69B4",
"2" = "#FF1493"))
instruction_prefs_long$liking <- factor(instruction_prefs_long$liking)
# plot using ggplot
ggplot() +
geom_col(data = instruction_prefs_long,
aes(x = instructional_preference, y = count, fill = liking)) +
labs(title = "Distribution of Instructional Preferences",
y = 'Count',
x = 'Instructional preference') +
theme_minimal() +
theme(title = element_text(size = 11, hjust = 0.5)) +
scale_fill_manual(values = c("0" = "#FFB6C1",
"1" = "#FF69B4",
"2" = "#FF1493"))
# plot using ggplot
ggplot() +
geom_col(data = instruction_prefs_long,
aes(x = instructional_preference, y = count, fill = liking)) +
labs(title = "Distribution of Instructional Preferences",
y = 'Count',
x = 'Instructional preference') +
theme_minimal() +
theme(title = element_text(size = 11, hjust = 0.5)) +
scale_fill_manual(values = c("0" = "#FFB6C1",
"1" = "plum",
"2" = "maroon"))
loadings <- pca$rotation[, 1:2]
loadings
loadingplot(pca,  comps = c(1,2),
scatter = TRUE, labels = 'names')
library(pls)
loadingplot(pca,  comps = c(1,2),
scatter = TRUE, labels = 'names')
loadingplot(pca,  comps = c(1,2),
scatter = TRUE, labels = 'names') +
labs(title = "PCA loadings plot for the first two principal components",
loadingplot(pca,  comps = c(1,2),
scatter = TRUE, labels = 'names') +
labs(title = "PCA loadings plot for the first two principal components")
loadingplot(pca,  comps = c(1,2),
scatter = TRUE, labels = 'names')
pca_scores <- as.data.frame(pca$x[, 1:2])
pca_scores
# Scatter plot of the first two PCs
ggplot(pca_scores, aes(x = PC1, y = PC2)) +
geom_point() +
labs(title = "PCA - First Two Principal Components")
# Scatter plot of the first two PCs
ggplot(pca_scores, aes(x = PC1, y = PC2)) +
geom_point() +
labs(title = "Scores plot of the first two PCs",
x = "PC1", y = "PC2") +
# Scatter plot of the first two PCs
ggplot(pca_scores, aes(x = PC1, y = PC2)) +
geom_point() +
labs(title = "Scores plot of the first two PCs",
x = "PC1", y = "PC2")
pca_scores <- as.data.frame(pca$x[, 1:3])
pca_scores
# Scatter plot of the first two PCs
ggplot(pca_scores, aes(x = PC1, y = PC3)) +
geom_point() +
labs(title = "Scores plot of the first two PCs",
x = "PC1", y = "PC2")
pca_scores <- as.data.frame(pca$x[, 1:4])
pca_scores
# Scatter plot of the first two PCs
ggplot(pca_scores, aes(x = PC1, y = PC4)) +
geom_point() +
labs(title = "Scores plot of the first two PCs",
x = "PC1", y = "PC2")
# Scatter plot of the first two PCs
ggplot(pca_scores, aes(x = PC2, y = PC4)) +
geom_point() +
labs(title = "Scores plot of the first two PCs",
x = "PC1", y = "PC2")
# Scatter plot of the first two PCs
ggplot(pca_scores, aes(x = PC3, y = PC4)) +
geom_point() +
labs(title = "Scores plot of the first two PCs",
x = "PC1", y = "PC2")
# Scatter plot of the first two PCs
ggplot(pca_scores, aes(x = PC2, y = PC3)) +
geom_point() +
labs(title = "Scores plot of the first two PCs",
x = "PC1", y = "PC2")
# Scatter plot of the first two PCs
ggplot(pca_scores, aes(x = PC1, y = PC2)) +
geom_point() +
labs(title = "Scores plot of the first two PCs",
x = "PC1", y = "PC2")
score.tbl <- as.data.frame(PCA$x) |>
bind_cols(instruction_prefs)
score.tbl <- as.data.frame(pca$x) |>
bind_cols(instruction_prefs)
# find the relative variance explained by each component
relative_evar <- round(pca$sdev^2 / sum(pca$sdev^2), 2)
score.tbl <- as.data.frame(pca$x) |>
bind_cols(instruction_prefs)
# find the relative variance explained by each component
relative_evar <- round(pca$sdev^2 / sum(pca$sdev^2), 2)
# plot a score plot
ggplot() +
geom_text(data = score.tbl, mapping = aes(x = PC1, y = PC2, label = I3)) +
labs(x = str_c('PC1 (', relative_evar[1], ')'),
y = str_c('PC2 (', relative_evar[2], ')'))
# Scatter plot of the first two PCs
ggplot(pca_scores, aes(x = PC1, y = PC2)) +
geom_point() +
labs(title = "Scores plot of the first two PCs",
x = "PC1", y = "PC2")
score.tbl <- as.data.frame(pca$x) |>
bind_cols(instruction_prefs)
# find the relative variance explained by each component
relative_evar <- round(pca$sdev^2 / sum(pca$sdev^2), 2)
# plot a score plot
ggplot() +
geom_text(data = score.tbl, mapping = aes(x = PC1, y = PC2, label = I7)) +
labs(x = str_c('PC1 (', relative_evar[1], ')'),
y = str_c('PC2 (', relative_evar[2], ')'))
# Scatter plot of the first two PCs
ggplot(pca_scores, aes(x = PC1, y = PC2)) +
geom_point() +
labs(title = "Scores plot of the first two PCs",
x = "PC1", y = "PC2")
# Scatter plot of the first two PCs
ggplot(pca_scores, aes(x = PC1, y = PC2)) +
geom_point() +
labs(title = "Scores plot of the first two PCs",
x = "PC1", y = "PC2")
score.tbl <- as.data.frame(pca$x) |>
bind_cols(instruction_prefs)
# find the relative variance explained by each component
relative_evar <- round(pca$sdev^2 / sum(pca$sdev^2), 2)
# plot a score plot
ggplot() +
geom_text(data = score.tbl, mapping = aes(x = PC1, y = PC2, label = I7)) +
labs(x = str_c('PC1 (', relative_evar[1], ')'),
y = str_c('PC2 (', relative_evar[2], ')'),
title = 'Score plot labeled by interest in I7'))
score.tbl <- as.data.frame(pca$x) |>
bind_cols(instruction_prefs)
# find the relative variance explained by each component
relative_evar <- round(pca$sdev^2 / sum(pca$sdev^2), 2)
# plot a score plot
ggplot() +
geom_text(data = score.tbl, mapping = aes(x = PC1, y = PC2, label = I7)) +
labs(x = str_c('PC1 (', relative_evar[1], ')'),
y = str_c('PC2 (', relative_evar[2], ')'),
title = 'Score plot labeled by interest in I7')
score.tbl <- as.data.frame(pca$x) |>
bind_cols(instruction_prefs)
# find the relative variance explained by each component
relative_evar <- round(pca$sdev^2 / sum(pca$sdev^2), 2)
# plot a score plot
ggplot() +
geom_text(data = score.tbl, mapping = aes(x = PC1, y = PC2, label = I3)) +
labs(x = str_c('PC1 (', relative_evar[1], ')'),
y = str_c('PC2 (', relative_evar[2], ')'),
title = 'Score plot labeled by interest in I7')
score.tbl <- as.data.frame(pca$x) |>
bind_cols(instruction_prefs)
# find the relative variance explained by each component
relative_evar <- round(pca$sdev^2 / sum(pca$sdev^2), 2)
# plot a score plot
ggplot() +
geom_text(data = score.tbl, mapping = aes(x = PC1, y = PC2, label = I3)) +
labs(x = str_c('PC1 (', relative_evar[1], ')'),
y = str_c('PC2 (', relative_evar[2], ')'),
title = 'Score plot labeled by interest in I3')
# calculate the correlation matrix
cor_matrix <- cor(instruction_prefs)
cor_matrix
kable(Variables_names,
caption = "Table 1: The different variables in the data set") |>
kable_styling(bootstrap_options = "bordered", full_width = F, position = 'left')
head(pca_scores)
score.tbl <- as.data.frame(pca$x) |>
bind_cols(instruction_prefs)
# find the relative variance explained by each component
relative_evar <- round(pca$sdev^2 / sum(pca$sdev^2), 2)
# plot a score plot
ggplot() +
geom_text(data = score.tbl, mapping = aes(x = PC1, y = PC2, label = I10)) +
labs(x = str_c('PC1 (', relative_evar[1], ')'),
y = str_c('PC2 (', relative_evar[2], ')'),
title = 'Score plot labeled by interest in I7')
score.tbl <- as.data.frame(pca$x) |>
bind_cols(instruction_prefs)
# find the relative variance explained by each component
relative_evar <- round(pca$sdev^2 / sum(pca$sdev^2), 2)
# plot a score plot
ggplot() +
geom_text(data = score.tbl, mapping = aes(x = PC1, y = PC2, label = I6)) +
labs(x = str_c('PC1 (', relative_evar[1], ')'),
y = str_c('PC2 (', relative_evar[2], ')'),
title = 'Score plot labeled by interest in I3')
score.tbl <- as.data.frame(pca$x) |>
bind_cols(instruction_prefs)
# find the relative variance explained by each component
relative_evar <- round(pca$sdev^2 / sum(pca$sdev^2), 2)
# plot a score plot
ggplot() +
geom_text(data = score.tbl, mapping = aes(x = PC1, y = PC2, label = I10)) +
labs(x = str_c('PC1 (', relative_evar[1], ')'),
y = str_c('PC2 (', relative_evar[2], ')'),
title = 'Score plot labeled by interest in I10')
score.tbl <- as.data.frame(pca$x) |>
bind_cols(instruction_prefs)
# find the relative variance explained by each component
relative_evar <- round(pca$sdev^2 / sum(pca$sdev^2), 2)
# plot a score plot
ggplot() +
geom_text(data = score.tbl, mapping = aes(x = PC1, y = PC2, label = I6)) +
labs(x = str_c('PC1 (', relative_evar[1], ')'),
y = str_c('PC2 (', relative_evar[2], ')'),
title = 'Score plot labeled by interest in I6')
rmarkdown::render("your_file.Rmd", output_format = "pdf_document")
rmarkdown::render("CA_STAT340_anekleiven.Rmd", output_format = "pdf_document")
